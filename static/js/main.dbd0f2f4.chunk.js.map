{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","ReactGA","initialize","pageview","this","initializeReactGA","react_default","a","createElement","className","href","target","rel","class","Helmet","charset","id","property","content","name","Grid","Row","Col","mdOffset","md","renderHeader","renderEducation","renderExperience","renderSkills","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dbd0f2f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport ReactGA from \"react-ga\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  initializeReactGA() {\n    ReactGA.initialize(\"UA-131401093-1\");\n    ReactGA.pageview(\"/homepage\");\n  }\n\n  componentDidMount() {\n    this.initializeReactGA();\n  }\n\n  renderHeader() {\n    return (\n      <div>\n        <div className=\"header sectionHeader\">Michelle Brier</div>\n        <div className=\"section\">\n          <b>Software Engineer</b>\n          {} | {}\n          <a\n            href=\"https://github.com/michellebrier\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Github\n          </a>\n          {} | {}\n          <a\n            href=\"https://www.linkedin.com/in/briermichelle/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            LinkedIn\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  renderEducation() {\n    return (\n      <div className=\"section\">\n        <div className=\"sectionHeader\">Education</div>\n        <div className=\"text\">\n          UC Berkeley\n          <br />\n          [Aug. 2016 - May 2020]\n          <br />\n          B.A. Computer Science\n          <br />\n          GPA: 3.7\n        </div>\n      </div>\n    );\n  }\n\n  renderExperience() {\n    return (\n      <div className=\"section\">\n        <div className=\"sectionHeader\">Experience</div>\n        <div className=\"text\">\n          <a\n            href=\"https://www.flexport.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Flexport\n          </a>\n          <br />\n          [Upcoming: Aug. 2020 -]\n          <br />\n          Software Engineer\n        </div>\n        <div className=\"text\">\n          <a\n            href=\"https://www.flexport.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Flexport\n          </a>\n          <br />\n          [May 2019 - Aug. 2019]\n          <br />\n          Software Engineering Intern\n        </div>\n        <div className=\"text\">\n          <a\n            href=\"https://www.gethearth.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Shogun Enterprises (DBA Hearth)\n          </a>\n          <br />\n          [May 2018 - Aug. 2018]\n          <br />\n          Software Engineering Intern\n        </div>\n        <div className=\"text\">\n          <a\n            href=\"https://xeniagifts.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Xenia Gifts\n          </a>\n          <br />\n          [Sept. 2017 - Jan. 2018]\n          <br />\n          Software Engineering Intern\n        </div>\n      </div>\n    );\n  }\n\n  renderSkills() {\n    return (\n      <div class=\"section\">\n        <div className=\"sectionHeader\">Skills</div>\n        <div className=\"text\">\n          GENERAL: Python, Java, C/C++, Golang, SQL, Pandas, NumPy, Vim\n        </div>\n        <div className=\"text\">\n          WEB: Ruby on Rails, React.js, Jinja2, HTML/CSS, JavaScript, HTTP\n        </div>\n        <div className=\"text\">MOBILE: React Native</div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>Michelle Brier</title>\n          <meta charset=\"utf-8\" />\n          <meta id=\"og:author\" property=\"og:author\" content=\"Michelle Brier\" />\n          <meta name=\"author\" content=\"Michelle Brier\" />\n          <meta\n            name=\"description\"\n            content=\"Michelle Brier - Online Portfolio\"\n          />\n        </Helmet>\n        <Grid>\n          <Row className=\"bodyRow\">\n            <Col mdOffset={4} md={4}>\n              {this.renderHeader()}\n              {this.renderEducation()}\n              {this.renderExperience()}\n              {this.renderSkills()}\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}